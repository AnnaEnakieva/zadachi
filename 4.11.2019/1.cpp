1. поиск гамильтонова цикла по оре
#include <iostream>
using namespace std;
int main() {
    int m = 0;//количество ребер индентных данной вершине
    int n;// количество вершин
    int k=0;// счетчик
    cout << "введите количество вершин";
    cin >> n;
    int *a= new int[n];//массив для хранения степени вершины
    int** Mas = new int *[n];//матрица смежности
    for (int i = 1; i < n; ++i)
        Mas[i] = new int [n];
    cout << " введите матрица смежности";
    for (int i = 1; i < n; i++)
    {
        for (int j = 1; j < n; j++)
        {
            cin >> Mas[i][j];
        }
    }
    for (int i = 1; i <= n + 1; ++i ){
        for (int j = 1; j <= n + 1; j++)
        {
            if (Mas[i][j] == 1){//если данная вершина индентна другой, то увеличиваем значение м. полученные данные записываем в массив аб обнуляем счетчик
                m++;
            cout << m << " ";
            }

        }
        a[i]= m;
        cout << a[i] << " ";
      m = 0;
    }
    for (int i=1; i < n+1; i++)// проходимся по массиву, сравнивая сумму любых вевершин с 3 по теореме оре. если выполняется, то k=1, если нет, то 0
    {
        if (a[i] + a[i+1] >= 3)//работает не для любых вершин
            k=1;
        else  k=0;
        cout << k << " "<< endl;
    }
    if (k == 1)
    cout << "гамильтонов цикл найден";
     else cout << "цикл не найден ";
    /*for (int i = 0; i < n; i++)
        delete[] Mas[i];
    delete [] Mas;*/
    return 0;
}
